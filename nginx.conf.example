events {
    worker_connections 1024;
}

http {
    upstream linebot_backend {
        server linebot:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=linebot:10m rate=10r/s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # HTTP server (redirect to HTTPS)
    server {
        listen 80;
        server_name your-domain.com;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name your-domain.com;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Webhook endpoint
        location /webhook {
            limit_req zone=linebot burst=20 nodelay;
            proxy_pass http://linebot_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://linebot_backend;
            access_log off;
        }

        # Block all other endpoints
        location / {
            return 404;
        }
    }

    # Logging
    access_log /var/log/nginx/linebot_access.log;
    error_log /var/log/nginx/linebot_error.log warn;
}